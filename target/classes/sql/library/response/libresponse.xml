<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="lib.response">
	
	<select id="selectLibResponseInfo" parameterType="Map" resultType="camelMap">
		<include refid="common.pagingPre" />
		SELECT
			ROW_NUMBER() OVER (ORDER BY 
			<choose>
				<when test='sortCol == "LIB_MANAGE_NAME" and order =="ASC"'>
				LIB_MANAGE_NAME ASC
				</when>
				<when test='sortCol == "LIB_MANAGE_NAME" and order =="DESC"'>
				LIB_MANAGE_NAME ASC
				</when>
				<when test='sortCol == "RES_TITLE" and order =="ASC"'>
				RES_TITLE ASC
				</when>
				<when test='sortCol == "RES_TITLE" and order =="DESC"'>
				RES_TITLE DESC
				</when>
				<when test='sortCol == "RES_DATE" and order =="ASC"'>
				RES_DATE ASC
				</when>
				<when test='sortCol == "RES_DATE" and order =="DESC"'>
				RES_DATE DESC
				</when>
				<when test='sortCol == "BOOK_COUNT" and order =="ASC"'>
				BOOK_COUNT ASC
				</when>
				<when test='sortCol == "BOOK_COUNT" and order =="DESC"'>
				BOOK_COUNT DESC
				</when>
				<when test='sortCol == "RES_STATUS" and order =="ASC"'>
				RES_STATUS ASC
				</when>
				<when test='sortCol == "RES_STATUS" and order =="DESC"'>
				RES_STATUS DESC
				</when>
				<when test='sortCol == "STORE_NAME" and order =="ASC"'>
				STORE_NAME ASC
				</when>
				<when test='sortCol == "STORE_NAME" and order =="DESC"'>
				STORE_NAME DESC
				</when>
				<otherwise>
					RES_DATE DESC
				</otherwise>
			</choose>
			) RNUM,
			REC_KEY,
			STORE_ID,
			STORE_NAME,
			LIB_MANAGE_CODE,
			LIB_MANAGE_NAME,
			RES_TITLE,
			RES_DATE,
			FINISH_DATE,
			RES_STATUS,
			RES_STATUS_NAME,
			BOOK_COUNT
		FROM
			(SELECT
				RES.*,
				(SELECT LIB_NAME FROM DLOAN_LIB_TBL A WHERE A.LIB_MANAGE_CODE = RES.LIB_MANAGE_CODE) LIB_MANAGE_NAME,
				(SELECT STORE_NAME FROM DLOAN_STORE_TBL A WHERE A.STORE_ID = RES.STORE_ID) STORE_NAME,
				CASE RES_STATUS
					WHEN 'S01' THEN '납품요청'
					WHEN 'S02' THEN '납품완료'
					WHEN 'L01' THEN '납품승인'
					ELSE ''
				END RES_STATUS_NAME,
				(SELECT COUNT(RES.REC_KEY) FROM DLOAN_REQ_TBL REQ WHERE RES.REC_KEY = REQ.RES_KEY) BOOK_COUNT
			FROM
				DLOAN_RES_TBL RES) MAIN
		<where>
			<if test="resStatus != null and resStatus != ''">
				AND RES_STATUS = #{resStatus}
			</if>
			<if test="from_resDate != null and from_resDate != ''">
				<if test="to_resDate != null and to_resDate != ''">
					AND RES_DATE BETWEEN TO_DATE (REPLACE(#{from_resDate}, '-', '') || '000000', 'YYYYMMDDHH24MISS')
					AND TO_DATE (REPLACE(#{to_resDate}, '-', '')   || '235959', 'YYYYMMDDHH24MISS')
				</if>
			</if>
			<if test="libManageCode != null and libManageCode != ''">
				AND LIB_MANAGE_CODE =#{libManageCode} 
			</if>
		</where>
		<include refid="common.pagingPost" />
	</select>

	<select id="selectRequestList" parameterType="Map" resultType="camelMap">
		SELECT 
				ROW_NUMBER() OVER (ORDER BY 
				<choose>
					<when test='sortCol == "USER_NO" and order =="ASC"'>
					USER_NO ASC
					</when>
					<when test='sortCol == "USER_NO" and order =="DESC"'>
					USER_NO ASC
					</when>
					<when test='sortCol == "TITLE" and order =="ASC"'>
					TITLE ASC
					</when>
					<when test='sortCol == "TITLE" and order =="DESC"'>
					TITLE DESC
					</when>
					<when test='sortCol == "AUTHOR" and order =="ASC"'>
					AUTHOR ASC
					</when>
					<when test='sortCol == "AUTHOR" and order =="DESC"'>
					AUTHOR DESC
					</when>
					<when test='sortCol == "PUBLISHER" and order =="ASC"'>
					PUBLISHER ASC
					</when>
					<when test='sortCol == "PUBLISHER" and order =="DESC"'>
					PUBLISHER DESC
					</when>
					<when test='sortCol == "REQ_DATE" and order =="ASC"'>
					REQ_DATE ASC
					</when>
					<when test='sortCol == "REQ_DATE" and order =="DESC"'>
					REQ_DATE DESC
					</when>
					<when test='sortCol == "LOAN_WAIT_DATE" and order =="ASC"'>
					REQ_STATUS_NAME ASC
					</when>
					<when test='sortCol == "LOAN_WAIT_DATE" and order =="DESC"'>
					REQ_STATUS_NAME DESC
					</when>
					<otherwise>
						REQ_DATE DESC
					</otherwise>
				</choose>
				) RNUM,
				REC_KEY,
				USER_NO,
				(SELECT NAME 
				  FROM CO_LOAN_USER_TBL LOAN
				 WHERE LOAN.USER_NO = MAIN.USER_NO) USER_NAME,
				SMS_YN,
				STORE_ID,
				LIB_MANAGE_CODE,
				LIB_MANAGE_NAME,
				ISBN,
				TITLE,
				IMG_URL,
				AUTHOR,
				PUBLISHER,
				PUB_DATE,
				PRICE,
				PRICE*90/100 AS REAL_PRICE,
				TO_CHAR (REQ_DATE, 'YYYY-MM-DD') REQ_DATE,
				REQ_STATUS,
				REQ_STATUS_NAME,
				LOAN_WAIT_DATE,
				LOAN_DATE,
				RETURN_DATE,
				(SELECT L.RETURN_PLAN_DATE FROM LH_STORAGE_V01 L WHERE L.REC_KEY=MAIN.LOAN_KEY) as RETURN_PLAN_DATE,
				CANCEL_REASON,
				RES_KEY,
				RES_STATUS,
				RES_STATUS_NAME,
		        RES_REMARK
		   FROM (SELECT REQ.*,
						(SELECT LIB_NAME
						   FROM DLOAN_LIB_TBL A
						  WHERE A.LIB_MANAGE_CODE = REQ.LIB_MANAGE_CODE) LIB_MANAGE_NAME,
						CASE REQ_STATUS
							WHEN 'U01' THEN '신청중'
							WHEN 'U02' THEN '신청취소'
							WHEN 'S02' THEN '서점신청거절'
							WHEN 'S03' THEN '도서관확인요청'
							WHEN 'S04' THEN '도서준비'
							WHEN 'S05' THEN '대출대기'
							WHEN 'S06' THEN '대출'
							WHEN 'S07' THEN '반납'
							WHEN 'S08' THEN '미대출취소'
							WHEN 'S09' THEN '환불불가'
							WHEN 'L01' THEN '도서관승인'
							WHEN 'L02' THEN '도서관신청거절'
							ELSE ''
						END REQ_STATUS_NAME,
						CASE RES_STATUS
							WHEN 'S01' THEN '요청'
							WHEN 'L01' THEN '구입'
							WHEN 'L02' THEN '반품'
							ELSE ''
						END RES_STATUS_NAME
				   FROM DLOAN_REQ_TBL REQ
		         ) MAIN
		  WHERE RES_KEY =  #{resKey}
	</select>
	
	<select id="getResopnseInfo" parameterType="Map" resultType="camelMap">
		select REC_KEY RES_KEY,
               STORE_ID,
               (SELECT STORE_NAME
				  FROM DLOAN_STORE_TBL A
				 WHERE A.STORE_ID = RES.STORE_ID) STORE_NAME,
               LIB_MANAGE_CODE,
               RES_TITLE,
               RES_DATE,
               RES_STATUS 
		  from DLOAN_RES_TBL RES
		 WHERE REC_KEY = #{resKey}
	</select>
	
	
	<update id="updateLibReqResponsStatus" parameterType="Map" >
		UPDATE DLOAN_REQ_TBL
			SET RES_STATUS  = #{resStatus}
			<if test="resStatus != null and resStatus == 'L02'">
				, RES_REMARK = #{resRemark}
			</if>
			<if test="resStatus != null and resStatus != 'L02'">
				, RES_REMARK = ''
			</if>
		WHERE REC_KEY     = #{recKey}
	</update>
	
	<update id="updateLibResponsStatus" parameterType="Map" >
		UPDATE DLOAN_RES_TBL
		   SET RES_STATUS  = #{resStatus}
		 WHERE REC_KEY     = #{recKey} 
	</update>
	
	<select id="getLibResponseInfo" parameterType="Map" resultType="camelMap">
		WITH TEMP AS (SELECT REC_KEY, ISBN, TITLE, AUTHOR, PUBLISHER, PRICE, PRICE*90/100 AS REAL_PRICE, REQ_DATE, STORE_ID FROM DLOAN_REQ_TBL WHERE RES_STATUS = 'L01' AND RES_KEY = #{resKey} ORDER BY REQ_DATE DESC)
		SELECT ROWNUM RNUM, C.*
		FROM
			(SELECT
				DISTINCT A.ISBN, B.TITLE, B.PUBLISHER, NVL(B.PRICE, 0) AS PRICE, NVL(B.PRICE*90/100, 0) AS REAL_PRICE, A.CNT, B.STORE_ID, B.AUTHOR
			FROM
				(SELECT ISBN, COUNT(1) AS CNT FROM TEMP GROUP BY ISBN) A, TEMP B
			WHERE
				A.ISBN = B.ISBN) C
	</select>
	
</mapper>
