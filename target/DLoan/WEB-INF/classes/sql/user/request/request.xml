<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="user.request">

	<!--
	U01 : 신청중
	U02 : 신청취소
	S02 : 서점신청거절 (신청거절)
	S03 : 도서관확인요청 (신청중)
	S04 : 도서준비
	S05 : 대출대기
	S06 : 대출
	S07 : 반납
	S08 : 미대출취소
	L01 : 도서관승인 (도서준비)
	L02 : 도서관신청거절 (신청거절)
	 -->
	
	<!-- 서점 정보  -->
	<select id="selectStore" resultType="camelMap">
		SELECT  STORE_ID   AS CODE,
				STORE_NAME AS VALUE
		   FROM DLOAN_STORE_TBL
	</select> 
	 
	 <!-- 당월 대출 신청 수  제외(신청취소, 서점신청거절, 도서관신청거절) -->
	<select id="getUserRequestConuntYn" parameterType="map"  resultType="Integer">
		SELECT COUNT(1)
		  FROM DLOAN_REQ_TBL
		 WHERE USER_NO = #{userNo}
		   AND TO_CHAR(REQ_DATE, 'YYYYMM') = TO_CHAR(SYSDATE, 'YYYYMM')
		   AND REQ_STATUS NOT IN ('U02', 'S02', 'L02', 'S09')
	</select>
	
	<!-- 서점별 월별 금액 체크 -->
	<select id="getMonthLibPrice"  parameterType="Map" resultType="camelMap">
	SELECT PRICE
	     , (SELECT LIMIT_PRICE FROM DLOAN_LIB_TBL WHERE LIB_MANAGE_CODE = #{libManageCode}) AS LIMIT_PRICE
	  FROM (
	    SELECT NVL(SUM(PRICE), 0) AS PRICE
	      FROM DLOAN_REQ_TBL
	     WHERE LIB_MANAGE_CODE = #{libManageCode}
	       AND TO_CHAR(REQ_DATE, 'YYYYMM') = TO_CHAR(SYSDATE, 'YYYYMM')
	       AND REQ_STATUS NOT IN ('U02', 'S02', 'L02', 'S09')
	)
	</select>
	
	<!-- 서점별 월별 금액 체크 -->
	<select id="getMonthStorePrice"  parameterType="Map" resultType="camelMap">
	SELECT PRICE
	     , (SELECT LIMIT_PRICE FROM DLOAN_STORE_TBL WHERE STORE_ID = #{storeId}) AS LIMIT_PRICE
	  FROM (
	    SELECT NVL(SUM(PRICE), 0) AS PRICE
	      FROM DLOAN_REQ_TBL
	     WHERE STORE_ID = #{storeId}
	       AND TO_CHAR(REQ_DATE, 'YYYYMM') = TO_CHAR(SYSDATE, 'YYYYMM')
	       AND REQ_STATUS NOT IN ('U02', 'S02', 'L02', 'S09')
	)
	</select>

	<!-- 제한 책 -->
	<select id="getLimitBookCount" parameterType="map"  resultType="String">
		SELECT LIMIT_REASON
		  FROM DLOAN_REQ_LIMIT_BOOK_CONF_TBL
		 WHERE ISBN = #{isbn}
	</select>
	
	<!-- 도서관별 비치확인 수 확인 -->
	<select id="selectLibBookCount" parameterType="map"  resultType="camelMap">
	SELECT
		LIB.LIB_MANAGE_CODE,
		(SELECT A.LIB_NAME FROM DLOAN_LIB_TBL A WHERE A.LIB_MANAGE_CODE = LIB.LIB_MANAGE_CODE) LIB_NAME,
		LIB.ORDER_PRIORITY,
		((SELECT COUNT(1) FROM BO_BOOK_TBL B WHERE B.MANAGE_CODE = LIB.LIB_MANAGE_CODE AND
			<foreach collection="arIsbn" item="item" index="index" separator="OR" open="(" close=")">
				EA_ISBN LIKE #{item}||'%'
			</foreach>)
			+
		(SELECT COUNT(1) FROM DLOAN_REQ_TBL R WHERE R.LIB_MANAGE_CODE = LIB.LIB_MANAGE_CODE AND R.REQ_STATUS IN ('U01', 'S03', 'S04', 'L01') AND
			<foreach collection="arIsbn" item="item" index="index" separator="OR" open="(" close=")">
				ISBN LIKE '%'||#{item}||'%'
			</foreach>)) AS CNT,
		((SELECT COUNT(1) FROM BO_BOOK_TBL B WHERE B.MANAGE_CODE = LIB.LIB_MANAGE_CODE AND B.SHELF_LOC_CODE IN (SELECT CODE FROM CD_CODE_TBL WHERE CLASS = '19' AND DESCRIPTION IN (SELECT STORE_NAME FROM DLOAN_STORE_TBL)) AND
			<foreach collection="arIsbn" item="item" index="index" separator="OR" open="(" close=")">
				EA_ISBN LIKE #{item}||'%'
			</foreach>)
			+
		(SELECT COUNT(1) FROM DLOAN_REQ_TBL R WHERE R.LIB_MANAGE_CODE = LIB.LIB_MANAGE_CODE AND R.REQ_STATUS IN ('U01', 'S03', 'S04', 'L01') AND
			<foreach collection="arIsbn" item="item" index="index" separator="OR" open="(" close=")">
				ISBN LIKE '%'||#{item}||'%'
			</foreach>)) AS DLOAN_BOOK_CNT,
       (SELECT COUNT(1) FROM BO_BOOK_TBL B WHERE B.MANAGE_CODE = LIB.LIB_MANAGE_CODE AND B.SHELF_DATE IS NOT NULL AND
			<foreach collection="arIsbn" item="item" index="index" separator="OR" open="(" close=")">
				EA_ISBN LIKE #{item}||'%'
			</foreach>) AS SHELF_CNT						
	FROM
		DLOAN_LIB_ORDER_CONF_TBL LIB
	<where>
		<if test="storeId != null">
			LIB.STORE_ID = #{storeId}
		</if>
	</where>
	GROUP BY LIB.LIB_MANAGE_CODE, LIB.ORDER_PRIORITY
	ORDER BY LIB.ORDER_PRIORITY
	</select>
	
	<!-- 도서관별 비치도서 수 확인[비치희망신청]-->
	<select id="selectLibBookCountForFurnish" parameterType="map" resultType="camelMap">
		SELECT
			LIB.LIB_MANAGE_CODE,
			(SELECT A.LIB_NAME FROM DLOAN_LIB_TBL A WHERE A.LIB_MANAGE_CODE = LIB.LIB_MANAGE_CODE) LIB_NAME,
			((SELECT COUNT(1) FROM BO_BOOK_TBL B WHERE B.MANAGE_CODE = LIB.LIB_MANAGE_CODE AND 
				<foreach collection="arIsbn" item="item" index="index" separator="OR" open="(" close=")">
					EA_ISBN LIKE '%'||#{item}||'%'
				</foreach>)
				+
			(SELECT COUNT(1) FROM BO_FURNISH_TBL BF WHERE BF.MANAGE_CODE = LIB.LIB_MANAGE_CODE AND BF.FURNISH_STATUS IN ('2', '3') AND
				<foreach collection="arIsbn" item="item" index="index" separator="OR" open="(" close=")">
					EA_ISBN LIKE '%'||#{item}||'%'
				</foreach>)
			) AS CNT
		FROM
			DLOAN_LIB_TBL LIB
		WHERE
			LIB_MANAGE_CODE = #{libManageCode}
	</select>
	
	<!-- 개인정보 여부 -->
	<select id="getPersonInfoYn" parameterType="map"  resultType="String">
		SELECT VALUE_1
		  FROM ESL_MANAGE_TBL
		 WHERE REC_KEY = (
						SELECT MAX (REC_KEY) 
						  FROM ESL_MANAGE_TBL
				 		 WHERE CLASS_ALIAS = 'BTLMS' 
					       AND VALUE_NAME  = '개인정보보호적용여부')
	</select>
	
	<!-- 미실명인증자 대출가능여부 -->
	<select id="getUnknownLoanYn"  parameterType="map"  resultType="String">
		SELECT VALUE_1
		  FROM ESL_MANAGE_TBL
		 WHERE REC_KEY = (
						SELECT MAX (REC_KEY) 
						  FROM ESL_MANAGE_TBL
						 WHERE GROUP_2 = '열람' 
						   AND GROUP_3 = '공통'
						   AND CLASS_ALIAS = '개인정보보호'
						   AND VALUE_NAME  = '대출제한사용여부'
						   AND MANAGE_CODE = #{libManageCode})
	</select>
	
	<!-- 이용자정보 동의 조회  -->
	<select id="getUserAgreeInfo"  parameterType="map"  resultType="camelMap">
	<![CDATA[
		SELECT U.PRIVACY_CONFIRM_YN,
			   U.IPIN_HASH,
			   DECODE( (SELECT COUNT(T.USER_KEY)
						  FROM CO_AGREEMENT_INFO_TBL T
						 WHERE T.USER_KEY = U.REC_KEY), 1, 'Y', 'N') AS AGREE_YN,
			   (SELECT COUNT(CL.REC_KEY)
				  FROM LS_WORK_T01 CL
				 WHERE CL.USER_KEY = U.REC_KEY
				   AND CL.STATUS IN ('0','2','L','D')
				   AND TRUNC(CL.RETURN_PLAN_DATE) < TRUNC(SYSDATE)) AS DELAY_CNT
		  FROM CO_LOAN_USER_TBL U
		 WHERE USER_NO = #{userNo}
	 ]]>
	</select>
	
	
	<!-- 회원증분실시 대출불가능여부 -->
	<select id="getMemberCardLostByLoanYn"  parameterType="map"  resultType="String">
		SELECT VALUE_1
		  FROM ESL_MANAGE_TBL
		 WHERE REC_KEY = (
						SELECT MAX (REC_KEY) 
						  FROM ESL_MANAGE_TBL
						 WHERE GROUP_2     = '열람' 
						   AND GROUP_3     = '공통'
						   AND CLASS_ALIAS = '대출관리'
   						   AND VALUE_NAME  = '회원증분실시대출불가여부'
						   AND MANAGE_CODE = #{libManageCode})
	</select>
	
	<!-- 연체료미납시 대출불가능여부 -->
	<select id="getDelayLoanYn"  parameterType="map"  resultType="String">
		SELECT VALUE_1
		  FROM ESL_MANAGE_TBL
		 WHERE REC_KEY = (
						SELECT MAX (REC_KEY) 
						  FROM ESL_MANAGE_TBL
						 WHERE GROUP_2     = '열람' 
						   AND GROUP_3     = '공통'
						   AND CLASS_ALIAS = '연체관리'
						   AND VALUE_NAME  = '연체료미납시대출불가유무'
						   AND MANAGE_CODE = #{libManageCode})
	</select>
	
	
	<!-- 대출 이용자 정보 -->
	<select id="getMemberLoanInfo"  parameterType="map"  resultType="camelMap">
	<![CDATA[
		SELECT
			CLU.NAME AS USER_NAME,
			CLU.H_ZIPCODE AS ZIP_CODE,
			CLU.H_ADDR1 AS ADDR,
			CLU.H_PHONE AS TEL,
			CLU.E_MAIL AS MAIL,
			CASE 
				WHEN TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD'), 'YYYYMMDD') <= CLU.LOAN_STOP_DATE 
				THEN 'Y' 
				ELSE 'N' 
			END AS LOAN_STOP_YN,
			CLU.LOST_USER_CARD,
			(SELECT (
				(SELECT NVL(SUM(CL.ARREAR), 0) 
					FROM LS_WORK_T01 CL 
					WHERE CL.STATUS IN ('1','R')
						AND CL.USER_KEY=CLU.REC_KEY ) +
					(SELECT NVL(SUM(CL.ARREAR), 0) 
					FROM CO_LOAN_TBL CL 
					WHERE CL.STATUS IN ('1','R')
						AND CL.USER_KEY=CLU.REC_KEY )) FROM DUAL ) AS ARREAR
		FROM
			CO_LOAN_USER_TBL CLU
		WHERE
			CLU.USER_NO = #{userNo}
	 ]]>
	</select>
	
	<!-- 대출 가능 권수 정보 -->
	<select id="getMemberLoanBookCount"  parameterType="map"  resultType="camelMap">
	<![CDATA[
		SELECT NVL(CONFIG_LOCAL_LOAN_COUNT, 0) CONFIG_LOCAL_LOAN_COUNT,
			(LOCAL_BO_LOAN_COUNT+LOCAL_BO_APPDENDIX_LOAN_COUNT+LOCAL_SE_LOAN_COUNT+LOCAL_SE_APPDENDIX_LOAN_COUNT+LOCAL_NB_LOAN_COUNT) AS LOCAL_LOAN_COUNT
		FROM (
			SELECT
				(CASE WHEN 'Y'= (SELECT VALUE_1 FROM ESL_MANAGE_TBL WHERE MANAGE_CODE=#{libManageCode} AND GROUP_2='열람' AND GROUP_3='공통' AND CLASS_ALIAS='통합대출자' AND VALUE_NAME='통합대출권수사용여부')  THEN (SELECT NVL(LOAN_BOOK_CNT,0) FROM CD_INDIVIDUAL_CLASS_TBL WHERE MANAGE_CODE=#{libManageCode} AND CODE=CLU.USER_CLASS_CODE)
						ELSE (SELECT NVL(LOAN_BOOK_CNT,0)  FROM CD_CODE_TBL WHERE CLASS='31' AND CODE=CLU.USER_CLASS_CODE)
						END) AS  CONFIG_LOCAL_LOAN_COUNT
				, (SELECT COUNT(1) FROM LS_WORK_T01 CL, CO_NON_DB_BOOK_TBL BB WHERE CL.USER_KEY = CLU.REC_KEY AND CL.PUBLISH_FORM_CODE = 'NB' AND CL.STATUS IN('0','2','L','D') AND CL.L_DEVICE <> 'KOLASIII-이동도서관' AND CL.BOOK_KEY = BB.REC_KEY AND BB.MANAGE_CODE = #{libManageCode}) AS LOCAL_NB_LOAN_COUNT
				, (SELECT COUNT(1) FROM LS_WORK_T01 CL, SE_BOOK_TBL        BB WHERE CL.USER_KEY = CLU.REC_KEY AND CL.PUBLISH_FORM_CODE = 'SE' AND CL.STATUS IN('0','2','L','D') AND CL.L_DEVICE <> 'KOLASIII-이동도서관' AND CL.BOOK_KEY = BB.REC_KEY AND BB.MANAGE_CODE = #{libManageCode} AND BB.BOOK_TYPE         <> 'B' AND 'Y' = (SELECT VALUE_1 FROM ESL_MANAGE_TBL WHERE MANAGE_CODE = #{libManageCode} AND GROUP_2 = '열람' AND GROUP_3 = '공통' AND CLASS_ALIAS = '부록관리' AND VALUE_NAME = '부록대출권수포함여부')) AS LOCAL_SE_APPDENDIX_LOAN_COUNT
				, (SELECT COUNT(1) FROM LS_WORK_T01 CL, SE_BOOK_TBL        BB WHERE CL.USER_KEY = CLU.REC_KEY AND CL.PUBLISH_FORM_CODE = 'SE' AND CL.STATUS IN('0','2','L','D') AND CL.L_DEVICE <> 'KOLASIII-이동도서관' AND CL.BOOK_KEY = BB.REC_KEY AND BB.MANAGE_CODE = #{libManageCode} AND BB.BOOK_TYPE          = 'B') AS LOCAL_SE_LOAN_COUNT
				, (SELECT COUNT(1) FROM LS_WORK_T01 CL, BO_BOOK_TBL        BB WHERE CL.USER_KEY = CLU.REC_KEY AND CL.PUBLISH_FORM_CODE = 'MO' AND CL.STATUS IN('0','2','L','D') AND CL.L_DEVICE <> 'KOLASIII-이동도서관' AND CL.BOOK_KEY = BB.REC_KEY AND BB.MANAGE_CODE = #{libManageCode} AND BB.BOOK_APPENDIX_FLAG = 'A' AND 'Y' = (SELECT VALUE_1 FROM ESL_MANAGE_TBL WHERE MANAGE_CODE = #{libManageCode} AND GROUP_2 = '열람' AND GROUP_3 = '공통' AND CLASS_ALIAS = '부록관리' AND VALUE_NAME = '부록대출권수포함여부')) AS LOCAL_BO_APPDENDIX_LOAN_COUNT
				, (SELECT COUNT(1) FROM LS_WORK_T01 CL, BO_BOOK_TBL        BB WHERE CL.USER_KEY = CLU.REC_KEY AND CL.PUBLISH_FORM_CODE = 'MO' AND CL.STATUS IN('0','2','L','D') AND CL.L_DEVICE <> 'KOLASIII-이동도서관' AND CL.BOOK_KEY = BB.REC_KEY AND BB.MANAGE_CODE = #{libManageCode} AND BB.BOOK_APPENDIX_FLAG = 'B') AS LOCAL_BO_LOAN_COUNT
			FROM
				CO_LOAN_USER_TBL CLU
			WHERE CLU.USER_NO = #{userNo} )
	 ]]>
	</select>
	
	
	<!-- 대출 -->
	<insert id="insertRequest" parameterType="map">
		<selectKey keyProperty="recKey" resultType="int" order="BEFORE">
			SELECT DLOAN_SEQ.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO DLOAN_REQ_TBL 
				(
				REC_KEY, 
				USER_NO, 
				SMS_YN, 
				STORE_ID, 
				LIB_MANAGE_CODE, 
				ISBN, 
				TITLE, 
				IMG_URL, 
				AUTHOR, 
				PUBLISHER, 
				PUB_DATE, 
				PRICE, 
				REQ_DATE, 
				REQ_STATUS, 
				LOAN_WAIT_DATE,
				LOAN_DATE, 
				RETURN_DATE, 
				RETURN_PLAN_DATE, 
				CANCEL_REASON, 
				RES_KEY,
				RES_STATUS,
				NAME ,
				HANDPHONE
				)
		VALUES (
				#{recKey},
				#{userNo}, 
				#{smsYn}, 
				#{storeId}, 
				#{libManageCode},
				#{isbn}, 
				#{title}, 
				#{imgUrl},
				#{author}, 
				#{publisher}, 
				#{pubDate}, 
				#{price, jdbcType=VARCHAR}, 
				SYSDATE,
				'U01',
				NULL,
				NULL, 
				NULL,
				NULL, 
				NULL, 
				NULL,
				NULL,
		  		#{name},
		  		#{phone}
				)
	</insert>
	
	<!-- MY REQUEST INFO LIST -->
	<select id="selectRequestInfo" parameterType="Map" resultType="camelMap">
	<include refid="common.pagingPre" />
	SELECT ROW_NUMBER() OVER (ORDER BY 
		<choose>
			<when test='sortCol == "STORE_NAME"'      >STORE_NAME</when>
			<when test='sortCol == "TITLE"'           >TITLE</when>
			<when test='sortCol == "AUTHOR"'          >AUTHOR</when>
			<when test='sortCol == "PUBLISHER"'       >PUBLISHER</when>
			<when test='sortCol == "LOAN_WAIT_DATE"'  >LOAN_WAIT_DATE</when>
			<when test='sortCol == "LOAN_DATE"'       >LOAN_DATE</when>
			<when test='sortCol == "RETURN_PLAN_DATE"'>RETURN_PLAN_DATE</when>
			<when test='sortCol == "RETURN_DATE"'     >RETURN_DATE</when>
			<when test='sortCol == "REQ_STATUS_NAME"' >REQ_STATUS_NAME</when>
			<when test='sortCol == "CANCEL_REASON"'   >CANCEL_REASON</when>
			<otherwise>REQ_DATE</otherwise>
		</choose>
		<choose>
			<when test='order == "ASC"'>ASC</when>
			<otherwise>DESC</otherwise>
		</choose>
		   ) RNUM,
		   A.*
	  FROM (
		SELECT REC_KEY
		     , USER_NO
		     , SMS_YN
		     , STORE_ID
		     , A.LIB_MANAGE_CODE
		     , B.LIB_NAME
		     , ISBN
		     , TITLE
		     , IMG_URL
		     , AUTHOR
		     , PUBLISHER
		     , PUB_DATE
		     , PRICE
		     , REQ_DATE
		     , REQ_STATUS
		     , CASE REQ_STATUS WHEN 'U01' THEN '신청중'
		                       WHEN 'U02' THEN '신청취소'
		                       WHEN 'S02' THEN '신청거절'
		                       WHEN 'S03' THEN '신청중'
		                       WHEN 'S04' THEN '도서준비'
		                       WHEN 'S05' THEN '대출대기'
		                       WHEN 'S06' THEN '대출'
		                       WHEN 'S07' THEN '반납'
		                       WHEN 'S08' THEN '미대출취소'
		                       WHEN 'S09' THEN '환불불가'
		                       WHEN 'L01' THEN '도서준비'
		                       WHEN 'L02' THEN '신청거절'
		                       ELSE '' END AS REQ_STATUS_NAME
		     , LOAN_WAIT_DATE
		     , LOAN_DATE
		     , RETURN_DATE
		     , (SELECT L.RETURN_PLAN_DATE FROM LH_STORAGE_V01 L WHERE L.REC_KEY=A.LOAN_KEY) as RETURN_PLAN_DATE
		     , CANCEL_REASON
		     , RES_KEY
		     , RES_STATUS
		     , (SELECT STORE_NAME FROM DLOAN_STORE_TBL S WHERE S.STORE_ID = A.STORE_ID) AS STORE_NAME
		  FROM DLOAN_REQ_TBL A, DLOAN_LIB_TBL B
		 WHERE
		 	A.LIB_MANAGE_CODE = B.LIB_MANAGE_CODE 
		   AND USER_NO = #{userNo}
		   <if test="reqStatus != null and reqStatus != ''">
		   	<choose>
		   		<when test='reqStatus == "U01"'>
		   AND REQ_STATUS IN ('U01', 'S03')
		 		</when>
		 		<when test='reqStatus == "S04"'>
		   AND REQ_STATUS IN ('S04', 'L01') 
		 		</when>
		 		<when test='reqStatus == "S02"'>
		   AND REQ_STATUS IN ('S02', 'L02') 
		 		</when>
		 		<otherwise>
		   AND REQ_STATUS = #{reqStatus}
		 		</otherwise>
		 	</choose>
		 </if>
		 <if test="from_reqDate != null and from_reqDate != ''">
		 	<if test="to_reqDate != null and to_reqDate != ''">
		   AND REQ_DATE BETWEEN TO_DATE (REPLACE(#{from_reqDate}, '-', '') || '000000', 'YYYYMMDDHH24MISS')
		                    AND TO_DATE (REPLACE(#{to_reqDate}, '-', '')   || '235959', 'YYYYMMDDHH24MISS')
		 	</if>
		 </if>
		 <if test="from_loanDate != null and from_loanDate != ''">
		 	<if test="to_loanDate != null and to_loanDate != ''">
		   AND LOAN_DATE BETWEEN TO_DATE (REPLACE(#{from_loanDate}, '-', '') || '000000', 'YYYYMMDDHH24MISS')
		                    AND TO_DATE (REPLACE(#{to_loanDate}, '-', '')   || '235959', 'YYYYMMDDHH24MISS')
		 	</if>
		 </if>
		 <if test="from_returnPlanDate != null and from_returnPlanDate != ''">
		 	<if test="to_returnPlanDate != null and to_returnPlanDate != ''">
		   AND RETURN_PLAN_DATE BETWEEN TO_DATE (REPLACE(#{from_returnPlanDate}, '-', '') || '000000', 'YYYYMMDDHH24MISS')
		                            AND TO_DATE (REPLACE(#{to_returnPlanDate}, '-', '')   || '235959', 'YYYYMMDDHH24MISS')
		 	</if>
		 </if>
		 <if test="from_returnDate != null and from_returnDate != ''">
		 	<if test="to_returnDate != null and to_returnDate != ''">
		   AND RETURN_DATE BETWEEN TO_DATE (REPLACE(#{from_returnDate}, '-', '') || '000000', 'YYYYMMDDHH24MISS')
		                        AND TO_DATE (REPLACE(#{to_returnDate}, '-', '')   || '235959', 'YYYYMMDDHH24MISS')
		 	</if>
		 </if>
	  ) A
	<include refid="common.pagingPost" />
	</select>
	
	<update id="updateReqStatus"  parameterType="Map" >
		UPDATE DLOAN_REQ_TBL
		   SET REQ_STATUS = #{reqStatus}
		 WHERE REC_KEY    = #{recKey}
	</update>
	
	<select id="getRequestStatus" parameterType="String" resultType="String">
	SELECT REQ_STATUS FROM DLOAN_REQ_TBL WHERE REC_KEY = #{recKey}
	</select>
	
	<select id="getAladinCategory" parameterType="Integer" resultType="camelMap">
		SELECT
			CATEGORY_MALL, CATEGORY_LIMIT
		FROM
			DLOAN_ALADIN_CATEGORY_TBL
		WHERE
			CID = #{cid}
	</select>

	<select id="selectLoanYnList" parameterType="Map" resultType="camelMap">
		SELECT 
			ECO$F_GET_ASK_LOAN (B.WORKING_STATUS, B.MANAGE_CODE, '', B.REC_KEY, B.USE_LIMIT_CODE, B.SEPARATE_SHELF_CODE, B.REG_CODE, B.SHELF_LOC_CODE, B.REG_NO) AS LOAN_LIMIT_DESC
			, REG_NO AS REG_NO
			, (SELECT LIB_NAME FROM DLOAN_LIB_TBL A WHERE A.LIB_MANAGE_CODE = B.MANAGE_CODE) AS LIB_NAME
		FROM
			BO_BOOK_TBL B
		WHERE
			<foreach collection="arIsbn" item="item" index="index" separator="OR" open="(" close=")">
				EA_ISBN LIKE #{item}||'%'
			</foreach>
			<if test="libManageCode != null">
				AND MANAGE_CODE = #{libManageCode}
			</if>
			<if test="storeId != null">
				AND MANAGE_CODE IN (SELECT LIB_MANAGE_CODE FROM DLOAN_LIB_ORDER_CONF_TBL WHERE STORE_ID = #{storeId})
			</if>
	</select>
	
	<!-- 바로대출 비치희망 신청 -->
	<insert id="insertFurnishRequest" parameterType="Map">
		INSERT INTO
			BO_FURNISH_TBL(
				REC_KEY,
				ACQ_CODE,
				APPLICANT_NAME,
				ZIP_CODE,
				ADDRESS,
				TEL,
				HANDPHONE,
				EMAIL,
				APPLICANT_DATE,
				TITLE,
				AUTHOR,
				PUBLISHER,
				PUBLISH_YEAR,
				FURNISH_STATUS,
				INDEX_TITLE,
				INDEX_AUTHOR,
				INDEX_PUBLISHER,
				PRICE,
				SMS_RECEIPT_YN,
				FIRST_WORK,
				LAST_WORK,
				MANAGE_CODE,
				EA_ISBN,
				IDX_APPLICANT_NAME,
				USER_NO,
				RESERVATION_YN)
		VALUES(
			ESL_SEQ.NEXTVAL,
			'1',
			#{userName},
			#{zipCode},
			#{addr},
			#{tel},
			#{phone},
			#{mail},
			SYSDATE,
			#{title},
			#{author},
			#{publisher},
			#{pubDate},
			'1',
			#{idxTitle},
			#{idxAuthor},
			#{idxPublisher},
			#{price, jdbcType=VARCHAR},
			#{addOnsYn},
			#{firstWork},
			'',
			#{libManageCode},
			#{isbn},
			#{idxApplicantName},
			#{userNo},
			'N'
		) 
	</insert>
	
	<!-- 비치희망 신청 내역 조회 -->
	<select id="selectFurnishRequestInfo" parameterType="Map" resultType="camelMap">
		<include refid="common.pagingPre" />
		SELECT ROW_NUMBER() OVER (ORDER BY 
			<choose>
				<when test='sortCol == "TITLE"'           >TITLE</when>
				<when test='sortCol == "AUTHOR"'          >AUTHOR</when>
				<when test='sortCol == "PUBLISHER"'       >PUBLISHER</when>
				<when test='sortCol == "LOAN_WAIT_DATE"'  >LOAN_WAIT_DATE</when>
				<when test='sortCol == "LOAN_DATE"'       >LOAN_DATE</when>
				<when test='sortCol == "RETURN_PLAN_DATE"'>RETURN_PLAN_DATE</when>
				<when test='sortCol == "RETURN_DATE"'     >RETURN_DATE</when>
				<when test='sortCol == "REQ_STATUS_NAME"' >REQ_STATUS_NAME</when>
				<when test='sortCol == "CANCEL_REASON"'   >CANCEL_REASON</when>
				<otherwise>REQ_DATE</otherwise>
			</choose>
			<choose>
				<when test='order == "ASC"'>ASC</when>
				<otherwise>DESC</otherwise>
			</choose>
			) RNUM,
			A.*
		FROM (
			SELECT 
				REC_KEY ,
				USER_NO ,
				'' AS STORE_ID ,
				(SELECT LIB_NAME FROM DLOAN_LIB_TBL LIB WHERE LIB.LIB_MANAGE_CODE = A.MANAGE_CODE) AS LIB_NAME,
				TITLE ,
				PUBLISHER ,
				AUTHOR ,
				PUBLISH_YEAR AS PUB_DATE ,
				PRICE ,
				CANCEL_REASON ,
				APPLICANT_DATE AS REQ_DATE ,
				FURNISH_STATUS AS REQ_STATUS ,
				CASE FURNISH_STATUS
					WHEN '1'
						THEN '신청중'
					WHEN '2'
						THEN '처리중'
					WHEN '3'
						THEN '비치상태'
					WHEN '4'
						THEN '취소됨'
					ELSE ''
				END AS REQ_STATUS_NAME
			FROM BO_FURNISH_TBL A
			WHERE
				USER_NO = #{userNo}
				<if test="reqStatus != null and reqStatus != ''">
					AND FURNISH_STATUS = #{reqStatus}
				</if>
				<if test="from_reqDate != null and from_reqDate != ''">
					<if test="to_reqDate != null and to_reqDate != ''">
						AND APPLICANT_DATE BETWEEN TO_DATE (REPLACE(#{from_reqDate}, '-', '') || '000000', 'YYYYMMDDHH24MISS')
						AND TO_DATE (REPLACE(#{to_reqDate}, '-', '')   || '235959', 'YYYYMMDDHH24MISS')
					</if>
				</if>
				) A
		<include refid="common.pagingPost" />
	</select>
	
	<!-- 비치희망 신청 취소 -->
	<update id="updateFurnishReqStatus"  parameterType="Map" >
		UPDATE
			BO_FURNISH_TBL
		SET
			FURNISH_STATUS = #{reqStatus},
			LAST_WORK = #{lastWork}
		WHERE
			REC_KEY = #{recKey}
	</update>
	
	<!-- 당월 비치희망 신청 수  제외(신청취소, 서점신청거절, 도서관신청거절) -->
	<select id="getUserFurnishRequestConuntYn" parameterType="map"  resultType="Integer">
		SELECT
			COUNT(1)
		FROM
			BO_FURNISH_TBL
		WHERE
			USER_NO = #{userNo}
			AND TO_CHAR(APPLICANT_DATE, 'YYYYMM') = TO_CHAR(SYSDATE, 'YYYYMM')
			AND FURNISH_STATUS != '4'
	</select>
	
	<!-- 도서관 정보 -->
	<select id="getLibraryInfo" parameterType="String" resultType="camelMap">
		SELECT
			LIB_NAME
		FROM
			DLOAN_LIB_TBL
		WHERE
			LIB_MANAGE_CODE = #{libManageCode}
	</select>
	
	<!-- 도서 신청 제한 예외 정보 조회 -->
	<select id="getReqLimitAvoidCount" parameterType="map" resultType="Integer">
		SELECT COUNT(1) FROM DLOAN_REQ_LIMIT_AVOID_TBL WHERE ISBN = #{isbn}
	</select>
	
	<!-- 이용자 신청제한 이력 조회 -->
	<select id="getUserLimit" parameterType="map" resultType="camelMap">
		SELECT
			LIMIT_DATE
		FROM
			(SELECT
			    <choose>
					<when test="userPenalty != null and userPenalty = 'Y'">
						TO_CHAR(A.INPUT_DATE + 30, 'yyyy"년" MM"월" DD"일"') AS LIMIT_DATE
					</when>
			        <otherwise>
						TO_CHAR(ADD_MONTHS(A.INPUT_DATE, 1), 'yyyy"년" MM"월"') AS LIMIT_DATE
					</otherwise>
				</choose>
			FROM
				DLOAN_REQ_USER_LIMIT_TBL A, CO_LOAN_USER_TBL B
			WHERE
				A.USER_KEY = B.REC_KEY
				AND B.USER_NO = #{userNo}
				AND TO_CHAR(sysdate, 'yyyy/MM') = TO_CHAR(ADD_MONTHS(A.INPUT_DATE, 1), 'yyyy/MM')
			ORDER BY INPUT_DATE DESC)
		WHERE
			ROWNUM = 1
	</select>

	<select id="getLimitDateReason" parameterType="map"  resultType="String">
		SELECT
		LIMIT_REASON
		FROM
		DLOAN_LIMIT_TBL
		WHERE
		<if test="libManageCode != null">
			LIB_MANAGE_CODE = #{libManageCode}
		</if>
		<if test="storeId != null">
			STORE_ID = #{storeId}
		</if>
		AND LIMIT_YN = 'Y'
		AND NVL(TRUNC(LIMIT_DATE_1), SYSDATE - 1) &lt; SYSDATE
		AND NVL(TRUNC(LIMIT_DATE_2) + 0.99999, SYSDATE + 1) &gt; SYSDATE
		AND ROWNUM = 1
	</select>

</mapper>
