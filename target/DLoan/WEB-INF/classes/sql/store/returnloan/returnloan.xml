<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="store.returnloan">
	
	<select id="selectReturnLoanInfo" parameterType="Map" resultType="camelMap">
		<include refid="common.pagingPre" />
		SELECT
			ROW_NUMBER() OVER (ORDER BY 
			<choose>
				<when test='sortCol == "STORE_ID" and order =="ASC"'>
				STORE_ID ASC
				</when>
				<when test='sortCol == "STORE_ID" and order =="DESC"'>
				STORE_ID ASC
				</when>
				<when test='sortCol == "TITLE" and order =="ASC"'>
				TITLE ASC
				</when>
				<when test='sortCol == "TITLE" and order =="DESC"'>
				TITLE DESC
				</when>
				<when test='sortCol == "AUTHOR" and order =="ASC"'>
				AUTHOR ASC
				</when>
				<when test='sortCol == "AUTHOR" and order =="DESC"'>
				AUTHOR DESC
				</when>
				<when test='sortCol == "PUBLISHER" and order =="ASC"'>
				PUBLISHER ASC
				</when>
				<when test='sortCol == "PUBLISHER" and order =="DESC"'>
				PUBLISHER DESC
				</when>
				<when test='sortCol == "REQ_DATE" and order =="ASC"'>
				REQ_DATE ASC
				</when>
				<when test='sortCol == "REQ_DATE" and order =="DESC"'>
				REQ_DATE DESC
				</when>
				<when test='sortCol == "LOAN_WAIT_DATE" and order =="ASC"'>
				LOAN_WAIT_DATE ASC
				</when>
				<when test='sortCol == "LOAN_WAIT_DATE" and order =="DESC"'>
				LOAN_WAIT_DATE DESC
				</when>
				<when test='sortCol == "LOAN_DATE" and order =="ASC"'>
				LOAN_DATE ASC
				</when>
				<when test='sortCol == "LOAN_DATE" and order =="DESC"'>
				LOAN_DATE DESC
				</when>
				<when test='sortCol == "RETURN_DATE" and order =="ASC"'>
				RETURN_DATE ASC
				</when>
				<when test='sortCol == "RETURN_DATE" and order =="DESC"'>
				RETURN_DATE DESC
				</when>
				<when test='sortCol == "RETURN_PLAN_DATE" and order =="ASC"'>
				RETURN_PLAN_DATE ASC
				</when>
				<when test='sortCol == "RETURN_PLAN_DATE" and order =="DESC"'>
				RETURN_PLAN_DATE DESC
				</when>
				<when test='sortCol == "CANCEL_REASON" and order =="ASC"'>
				CANCEL_REASON ASC
				</when>
				<when test='sortCol == "CANCEL_REASON" and order =="DESC"'>
				CANCEL_REASON DESC
				</when>
				<when test='sortCol == "REQ_STATUS_NAME" and order =="ASC"'>
				REQ_STATUS_NAME ASC
				</when>
				<when test='sortCol == "REQ_STATUS_NAME" and order =="DESC"'>
				REQ_STATUS_NAME DESC
				</when>
				<when test='sortCol == "SMS_YN" and order =="ASC"'>
				SMS_YN ASC
				</when>
				<when test='sortCol == "SMS_YN" and order =="DESC"'>
				SMS_YN DESC
				</when>
				<when test='sortCol == "LIB_MANAGE_NAME" and order =="ASC"'>
				LIB_MANAGE_NAME ASC
				</when>
				<when test='sortCol == "LIB_MANAGE_NAME" and order =="DESC"'>
				LIB_MANAGE_NAME DESC
				</when>
				<when test='sortCol == "USER_NO" and order =="ASC"'>
				USER_NO ASC
				</when>
				<when test='sortCol == "USER_NO" and order =="DESC"'>
				USER_NO DESC
				</when>
				<otherwise>
					REQ_DATE DESC
				</otherwise>
			</choose>
			) RNUM,
			REC_KEY,
			USER_NO,
			SMS_YN,
			STORE_ID,
			LIB_MANAGE_CODE,
			LIB_MANAGE_NAME,
			ISBN,
			TITLE,
			IMG_URL,
			AUTHOR,
			PUBLISHER,
			PUB_DATE,
			PRICE,
			REQ_DATE,
			REQ_STATUS,
			REQ_STATUS_NAME,
			LOAN_WAIT_DATE,
			LOAN_DATE,
			RETURN_DATE,
			(SELECT L.RETURN_PLAN_DATE FROM LH_STORAGE_V01 L WHERE L.REC_KEY=MAIN.LOAN_KEY) as RETURN_PLAN_DATE,
			CANCEL_REASON,
			RES_KEY,
			RES_STATUS,
			REQ_HANDPHONE
		FROM (SELECT
				REQ.*,
				(SELECT LIB_NAME FROM DLOAN_LIB_TBL A WHERE A.LIB_MANAGE_CODE = REQ.LIB_MANAGE_CODE) LIB_MANAGE_NAME,
				(SELECT HANDPHONE FROM CO_LOAN_USER_TBL WHERE USER_NO = REQ.USER_NO)AS REQ_HANDPHONE,
				CASE REQ_STATUS
					WHEN 'U01' THEN '신청중'
					WHEN 'U02' THEN '신청취소'
					WHEN 'S02' THEN '서점신청거절'
					WHEN 'S03' THEN '도서관확인요청'
					WHEN 'S04' THEN '도서준비'
					WHEN 'S05' THEN '대출대기'
					WHEN 'S06' THEN '대출'
					WHEN 'S07' 
						THEN (CASE NVL(RES_KEY, -1)
							WHEN -1 THEN '반납'
							ELSE (CASE RES_STATUS
								WHEN 'S01' THEN '납품요청'
								WHEN 'L01' THEN '납품구입'
								WHEN 'L02' THEN '납품반품'
								ELSE ''
								END)
							END)
					WHEN 'S08' 
						THEN (CASE NVL(RES_KEY, -1)
							WHEN -1 THEN '미대출취소'
							ELSE (CASE RES_STATUS
								WHEN 'S01' THEN '납품요청(미대출)'
								WHEN 'L01' THEN '납품구입(미대출)'
								WHEN 'L02' THEN '납품반품(미대출)'
								ELSE ''
								END)
							END)
					WHEN 'S09' THEN '환불불가'
					WHEN 'L01' THEN '도서관승인'
					WHEN 'L02' THEN '도서관신청거절'
					ELSE ''
				END REQ_STATUS_NAME
			FROM DLOAN_REQ_TBL REQ) MAIN
		WHERE
			STORE_ID =#{storeId} 
			<choose>
				<when test="reqStatus != null and reqStatus != ''">
					<choose>
						<when test="reqStatus == 'S05' or reqStatus == 'S06' or reqStatus == 'S07' or reqStatus == 'S08'">
							AND REQ_STATUS = #{reqStatus} AND RES_KEY IS NULL
						</when>
						<otherwise>
							AND RES_STATUS = #{reqStatus} AND RES_KEY IS NOT NULL
						</otherwise>
					</choose>
				</when>
				<otherwise>
					AND REQ_STATUS IN ('S05', 'S06', 'S07', 'S08')
				</otherwise>
			</choose>
			
			<if test='from_reqDate != null and from_reqDate != ""'>
				<if test='to_reqDate != null and to_reqDate != ""'>
					AND REQ_DATE BETWEEN TO_DATE (REPLACE(#{from_reqDate}, '-', '') || '000000', 'YYYYMMDDHH24MISS')
					AND TO_DATE (REPLACE(#{to_reqDate}, '-', '') || '235959', 'YYYYMMDDHH24MISS')
				</if>
			</if>
			<if test='userNo != null and userNo != ""'>
				AND USER_NO = #{userNo}
			</if>
			<if test='title != null and title != ""'>
				<!-- 2019 간담회 개선 : LIKE 검색 기능 수정 -->
				AND TITLE LIKE '%' || #{title} || '%'
			</if>
			<if test='author != null and author != ""'>
				<!-- 2019 간담회 개선 : LIKE 검색 기능 수정 -->
				AND AUTHOR LIKE '%' || #{author} || '%'
			</if>
			<if test='publisher != null and publisher != ""'>
				<!-- 2019 간담회 개선 : LIKE 검색 기능 수정 -->
				AND PUBLISHER LIKE '%' || #{publisher} || '%'
			</if>
			<if test='isbn != null and isbn != ""'>
				<!-- 2019 간담회 개선 : ISBN 검색 추가 -->
				AND ISBN LIKE '%' || #{isbn} || '%'
			</if>
		<include refid="common.pagingPost" />
	</select>
	
	<select id="getLoanPeriod" parameterType="Map" resultType="Integer">
	SELECT LOAN_PERIOD
	  FROM CD_CODE_TBL
	 WHERE CLASS = '31'
	   AND CODE = (
			SELECT USER_CLASS_CODE
			  FROM CO_LOAN_USER_TBL
			 WHERE USER_NO = #{userNo}
	   )
	</select>
	
	<select id="selectHolidayInfo" resultType="String">
	SELECT TO_CHAR(HOLIDAY_DATE, 'YYYY/MM/DD')
	  FROM DLOAN_HOLIDAY_TBL
	 WHERE HOLIDAY_DATE >= TRUNC(SYSDATE)
	 ORDER BY HOLIDAY_DATE ASC
	</select>

	<!-- 책정보 입력 -->
	<insert id="insertBook" parameterType="map">
		<!-- <selectKey keyProperty="bookKey" resultType="int" order="BEFORE"> -->
		<selectKey keyProperty="bookKey" resultType="long" order="BEFORE">
			SELECT ESL_SEQ.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO CO_NON_DB_BOOK_TBL 
			  (REC_KEY, 
			   PRICE, 
			   MANAGE_CODE, 
			   TITLE, 
			   AUTHOR,
  			   PUBLISHER, 
  			   WORKING_STATUS, 
  			   PREV_WORKING_STATUS, 
  			   FIRST_WORK)
	  VALUES (#{bookKey},
  			  #{price, jdbcType=VARCHAR},
			  #{libManageCode},
			  #{title,     jdbcType=VARCHAR},
			  #{author,    jdbcType=VARCHAR},
			  #{publisher, jdbcType=VARCHAR},
			  'BOL214O',
			  'BOL112N',
  			  TO_CHAR(SYSDATE, 'YYYYMMDD HH24MI')||' '||#{libManageCode}||'@'||#{ipAddr}||' 바로대출')

	</insert>
	
	<insert id="insertLoan" parameterType="map">
		<!-- <selectKey keyProperty="loanKey" resultType="int" order="BEFORE"> -->
		<selectKey keyProperty="loanKey" resultType="long" order="BEFORE">
			SELECT ESL_SEQ.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO LS_WORK_T01 
			  (REC_KEY,
			   BOOK_KEY, 
			   SHELF_LOC_CODE, 
			   MANAGE_CODE, 
			   TITLE, 
			   AUTHOR,
			   PUBLISHER, 
			   USER_KEY, 
			   USER_POSITION_CODE, 
			   USER_CLASS_CODE, 
			   MEMBER_CLASS,
			   LOAN_TYPE_CODE, 
			   RETURN_PLAN_DATE, 
			   STATUS, 
			   LOAN_DATE, 
			   L_DEVICE,
			   L_WORKER,
			   PUBLISH_FORM_CODE, 
			   FIRST_WORK) 
	   VALUES (#{loanKey},
			   #{bookKey},
			   (SELECT CODE FROM CD_CODE_TBL WHERE CLASS = '19' AND DESCRIPTION = #{storeName}),
			   #{libManageCode},
			   #{title},
			   #{author},
			   #{publisher},
			   #{userReckey},
			   #{userPositionCode},
			   #{userClassCode},
			   #{memberClass},
			   '5',
			   TO_DATE(#{returnPlanDate}||'23:59:59', 'YYYY/MM/DD HH24:MI:SS'),
			   '0',
			   SYSDATE,
			   'KOLASIII',
			   #{libManageCode},
			   'NB',
			   TO_CHAR(SYSDATE, 'YYYYMMDD HH24MI')||' '||#{libManageCode}||'@'||#{ipAddr}||' 바로대출')
	</insert>
	
	<!-- 신청정보 수정 -->
	<update id="updateRequestLoan" parameterType="map">
		UPDATE DLOAN_REQ_TBL
		   SET REQ_STATUS       = #{reqStatus},
			   LOAN_DATE        = SYSDATE,
			   RETURN_PLAN_DATE = TO_DATE(#{returnPlanDate}||'23:59:59', 'YYYY/MM/DD HH24:MI:SS'),
			   LOAN_KEY         = #{loanKey},
			   BOOK_KEY         = #{bookKey},
			   APPENDIX_YN      = #{appendixYn}
		 WHERE REC_KEY          = #{recKey}
	</update>
	
	<!--사용자 정보 수정(대출)  -->
	<update id="updateUserLoanCount"  parameterType="map">
		UPDATE CO_LOAN_USER_TBL
		   SET LOAN_COUNT     = LOAN_COUNT + 1,
		       LAST_LOAN_DATE = SYSDATE,
		       LAST_WORK      = TO_CHAR(SYSDATE, 'YYYYMMDD HH24MI')||' '||#{libManageCode}||'@'||#{ipAddr}||' 바로대출'
		 WHERE USER_NO        = #{userNo}
	</update>
	
	<select id="getReturPlanDateOverYn" parameterType="map" resultType="String">
	<![CDATA[
		SELECT CASE
				WHEN RETURN_PLAN_DATE < SYSDATE
				THEN 'Y'
				ELSE 'N'
			  END OVER_YN
		FROM (SELECT (SELECT L.RETURN_PLAN_DATE FROM LH_STORAGE_V01 L WHERE L.REC_KEY=REQ.LOAN_KEY) as RETURN_PLAN_DATE FROM DLOAN_REQ_TBL REQ
	   WHERE REC_KEY = #{recKey} )
	 ]]>
	</select>
	
	<select id="getLoanStopDatefunc" parameterType="map" resultType="Date">
		SELECT ECO$F_GET_LOANSTOPDATE(#{loanKey}, SYSDATE, #{libManageCode})
		  FROM DUAL
	</select>
	
	<!-- 사용자 정보 수정(반납) -->
	<update id="updateUserReturnLoan"  parameterType="map">
		UPDATE CO_LOAN_USER_TBL
		   SET LOAN_COUNT         = LOAN_COUNT - 1
		     , LAST_WORK          = TO_CHAR(SYSDATE, 'YYYYMMDD HH24MI')||' '||#{libManageCode}||'@'|| #{ipAddr} ||' 바로대출'
		     <if test='overYn == "Y"'> 
		     , LOAN_STOP_DATE     = #{loanStopDate, jdbcType=DATE}
		     , USER_CLASS         = DECODE(USER_CLASS, '0', '1', USER_CLASS)
		     , LOAN_STOP_SET_DATE = SYSDATE
		     , DELAYDAY_COUNT     = DELAYDAY_COUNT + TRUNC (TO_NUMBER (SYSDATE - CAST (#{returnPlanDate, jdbcType=DATE} AS DATE)))
		     </if>
		 WHERE USER_NO            = #{userNo}
	</update>
	
	
	<!-- 대출정보 수정 (반납) -->
	<update id="updateLoanInfo"  parameterType="map">
		UPDATE LS_WORK_T01
		   SET STATUS           = '1',
			   RETURN_TYPE_CODE = '0',
			   RETURN_DATE      = SYSDATE,
			   LAST_WORK        = TO_CHAR(SYSDATE, 'YYYYMMDD HH24MI')||' '||#{libManageCode}||'@'||#{ipAddr}||' 바로대출',
			   R_DEVICE         = 'KOLASIII',
			   R_WORKER         = #{libManageCode}
		 WHERE REC_KEY          = #{loanKey}
	</update>
	
	<!-- 책정보 수정 (반납) -->
	<update id="updateBookInfo" parameterType="map">
		UPDATE CO_NON_DB_BOOK_TBL
		   SET PREV_WORKING_STATUS = 'BOL214O',
			   WORKING_STATUS      = 'BOL112N',
			   LAST_WORK           = TO_CHAR(SYSDATE, 'YYYYMMDD HH24MI')||' '||#{libManageCode}||'@'||#{ipAddr}||' 바로대출'
		 WHERE REC_KEY             = #{bookKey}
	</update>
	
	<!-- 요청정보 수정(반납) -->
	<update id="updateRequestReturn" parameterType="map">
		UPDATE DLOAN_REQ_TBL
		   SET REQ_STATUS       = #{reqStatus},
			   RETURN_DATE      = SYSDATE
		 WHERE REC_KEY          = #{recKey}
	</update>
	
	<update id="updateBookWaitReqStatus"  parameterType="Map" >
		UPDATE DLOAN_REQ_TBL
		   SET REQ_STATUS     = #{reqStatus},
		   	   LOAN_WAIT_DATE = NULL,
		   	   PURCHASE_KEY   = NULL
		 WHERE REC_KEY        = #{recKey}
	</update>
	
	<delete id="deleteSpeciesInfo" parameterType="Map" >
		DELETE FROM BO_SPECIES_TBL
		 WHERE REC_KEY = #{purchaseKey}
	</delete>
	
	<delete id="deleteBookInfo" parameterType="Map" >
		DELETE FROM BO_BOOK_TBL
		 WHERE REC_KEY = #{purchaseKey}
	</delete>
	
	<delete id="deleteIndexInfo" parameterType="Map" >
		DELETE FROM IDX_BO_TBL
		 WHERE REC_KEY = #{purchaseKey}
	</delete>
	
	<delete id="deletePurchaseInfo" parameterType="Map" >
		DELETE FROM BO_PURCHASEINFO_TBL
		 WHERE REC_KEY = #{purchaseKey}
	</delete>
	
	<select id="getCardPasswd" parameterType="Map" resultType="String">
	SELECT CARD_PASSWORD FROM CO_LOAN_USER_TBL WHERE USER_NO = #{userNo}
	</select>
	
	<delete id="deleteDBBookInfo" parameterType="Map" >
		DELETE FROM CO_NON_DB_BOOK_TBL
		 WHERE REC_KEY = #{bookKey}
	</delete>
	
	<delete id="deleteLsWorkInfo" parameterType="Map" >
		DELETE FROM LS_WORK_T01
		 WHERE REC_KEY = #{loanKey}
	</delete>
	
	<!--사용자 정보 수정(대출>>대출대기)  -->
	<update id="updateUserLoanCount2"  parameterType="map">
		UPDATE CO_LOAN_USER_TBL
		   SET LOAN_COUNT     = LOAN_COUNT - 1,
		       LAST_WORK      = TO_CHAR(SYSDATE, 'YYYYMMDD HH24MI')||' '||#{libManageCode}||'@'||#{ipAddr}||' 바로대출'
		 WHERE USER_NO        = #{userNo}
	</update>
	
	<!--사용자 정보 수정(반납>>대출)  -->
	<update id="updateUserLoanCount3"  parameterType="map">
		UPDATE CO_LOAN_USER_TBL
		   SET LOAN_COUNT     = LOAN_COUNT + 1,
		       LAST_WORK      = TO_CHAR(SYSDATE, 'YYYYMMDD HH24MI')||' '||#{libManageCode}||'@'||#{ipAddr}||' 바로대출'
		 WHERE USER_NO        = #{userNo}
	</update>
	
	<update id="updateWaitReqStatus"  parameterType="Map" >
		UPDATE DLOAN_REQ_TBL
		   SET REQ_STATUS     = #{reqStatus},
		   	   LOAN_DATE = NULL,
		   	   LOAN_KEY  = NULL,
		   	   BOOK_KEY  = NULL,
		   	   RETURN_PLAN_DATE = NULL
		 WHERE REC_KEY        = #{recKey}
	</update>
	
	<update id="updateLoanReqStatus"  parameterType="Map" >
		UPDATE DLOAN_REQ_TBL
		   SET REQ_STATUS     = #{reqStatus},
		   	   RETURN_DATE	  = NULL
		 WHERE REC_KEY        = #{recKey}
	</update>
	
	<update id="updateLsWorkInfo"  parameterType="Map" >
		UPDATE LS_WORK_T01
		   SET STATUS		= 0,
		   	   RETURN_TYPE_CODE	= NULL,
		   	   RETURN_DATE	= NULL,
		   	   R_DEVICE		= NULL,
		   	   R_WORKER		= NULL,
		   	   LAST_WORK	= TO_CHAR(SYSDATE, 'YYYYMMDD HH24MI')||' '||#{libManageCode}||'@'||#{ipAddr}||' 바로대출'
		 WHERE REC_KEY        = #{loanKey}
	</update>
	
	<update id="updateDbBookInfo"  parameterType="Map" >
		UPDATE CO_NON_DB_BOOK_TBL
		   SET PREV_WORKING_STATUS	='BOL112N',
		   	   WORKING_STATUS	= 'BOL214O',
		   	   LAST_WORK	= TO_CHAR(SYSDATE, 'YYYYMMDD HH24MI')||' '||#{libManageCode}||'@'||#{ipAddr}||' 바로대출'
		 WHERE REC_KEY        = #{bookKey}
	</update>
	
	<select id="selectReturnPlanDate" parameterType="String" resultType="camelMap">
		SELECT
			TO_CHAR(RETURN_PLAN_DATE,'YYYY/MM/dd hh24:mi:ss') AS RETURN_PLAN_DATE
		FROM DLOAN_REQ_TBL
		WHERE REC_KEY IN
			<foreach collection="ltRecKey" item="item" index="index" separator="," open="(" close=")">
	 		#{item}
	 		</foreach> 
	</select>
	
	<select id="selectLsRequest" parameterType="String" resultType="camelMap">
		SELECT
			*
		FROM LS_WORK_T01
		WHERE REC_KEY = #{loanKey}
	</select>
	
	<insert id="insertCoLoanToLs" parameterType="map">
		INSERT INTO LS_WORK_T01
		(REC_KEY,
			   BOOK_KEY, 
			   SHELF_LOC_CODE, 
			   MANAGE_CODE, 
			   TITLE, 
			   AUTHOR,
			   PUBLISHER, 
			   USER_KEY, 
			   USER_POSITION_CODE, 
			   USER_CLASS_CODE, 
			   MEMBER_CLASS,
			   LOAN_TYPE_CODE, 
			   RETURN_PLAN_DATE, 
			   STATUS, 
			   LOAN_DATE, 
			   L_DEVICE,
			   L_WORKER,
			   PUBLISH_FORM_CODE, 
			   FIRST_WORK,
               RETURN_TYPE_CODE,
               RETURN_DATE,
               LAST_WORK,
               R_DEVICE,
               R_WORKER,
               CREATE_DATE,
               BOOK_MANAGE_CODE) 
		
			SELECT
			REC_KEY,
			   BOOK_KEY, 
			   SHELF_LOC_CODE, 
			   MANAGE_CODE, 
			   TITLE, 
			   AUTHOR,
			   PUBLISHER, 
			   USER_KEY, 
			   USER_POSITION_CODE, 
			   USER_CLASS_CODE, 
			   MEMBER_CLASS,
			   LOAN_TYPE_CODE, 
			   RETURN_PLAN_DATE, 
			   STATUS, 
			   LOAN_DATE, 
			   L_DEVICE,
			   L_WORKER,
			   PUBLISH_FORM_CODE, 
			   FIRST_WORK,
               RETURN_TYPE_CODE,
               RETURN_DATE,
               LAST_WORK,
               R_DEVICE,
               R_WORKER,
               CREATE_DATE,
               BOOK_MANAGE_CODE 
			
			FROM CO_LOAN_TBL
			WHERE REC_KEY = #{loanKey}
		
	</insert>
	
	<delete id="deleteCoLoanToLs" parameterType="Map" >
		DELETE FROM CO_LOAN_TBL
		 WHERE REC_KEY = #{loanKey}
	</delete>
	
	<select id="selectNowStatus" parameterType="String" resultType="camelMap">
		SELECT
			REQ_STATUS
		FROM DLOAN_REQ_TBL
		WHERE REC_KEY IN 
		<foreach collection="ltRecKey" item="item" index="index" separator="," open="(" close=")">
	 		#{item}
	 	</foreach> 
	</select>
</mapper>
